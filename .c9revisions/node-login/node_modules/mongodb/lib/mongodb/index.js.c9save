{"ts":1354675559665,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"try {\n  exports.BSONPure = require('bson').BSONPure;\n  exports.BSONNative = require('bson').BSONNative;\n} catch(err) {\n  // do nothing\n}\n\n[ 'commands/base_command'\n  , 'admin'\n  , 'collection'\n  , 'connection/read_preference'\n  , 'connection/connection'\n  , 'connection/server'\n  , 'connection/mongos'\n  , 'connection/repl_set'\n  , 'mongo_client'\n  , 'cursor'\n  , 'db'\n  , 'mongo_client'\n  , 'gridfs/grid'\n  ,\t'gridfs/chunk'\n  , 'gridfs/gridstore'].forEach(function (path) {\n  \tvar module = require('./' + path);\n  \tfor (var i in module) {\n  \t\texports[i] = module[i];\n    }\n\n    // backwards compat\n    exports.ReplSetServers = exports.ReplSet;\n    \n    // Add BSON Classes\n    exports.Binary = require('bson').Binary;\n    exports.Code = require('bson').Code;\n    exports.DBRef = require('bson').DBRef;\n    exports.Double = require('bson').Double;\n    exports.Long = require('bson').Long;\n    exports.MinKey = require('bson').MinKey;\n    exports.MaxKey = require('bson').MaxKey;\n    exports.ObjectID = require('bson').ObjectID;\n    exports.Symbol = require('bson').Symbol;\n    exports.Timestamp = require('bson').Timestamp;  \n    \n    // Add BSON Parser\n    exports.BSON = require('bson').BSONPure.BSON;\n\n});\n\n// Get the Db object\nvar Db = require('./db').Db;\n// Set up the connect function\nvar connect = Db.connect;\nvar obj = connect;\n// Map all values to the exports value\nfor(var name in exports) {\n  obj[name] = exports[name];\n}\n\n// Add the pure and native backward compatible functions\nexports.pure = exports.native = function() {\n  return obj;\n}\n\n// Map all values to the exports value\nfor(var name in exports) {\n  connect[name] = exports[name];\n}\n\n// Set our exports to be the connect function\nmodule.exports = connect;"]],"start1":0,"start2":0,"length1":0,"length2":1726}]],"length":1726}
